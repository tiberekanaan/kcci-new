/**
* DO NOT EDIT THIS FILE.
* See the following change record for more information,
* https://www.drupal.org/node/2815083
* @preserve
**/

(function ($, Drupal) {
  Drupal.behaviors.LbUX = {
    attach: function attach() {
      $('.layout-builder__actions .layout-builder__link').once().on('click', function (event) {
        $(event.currentTarget).parent().toggleClass('layout-builder__actions--display');
      });

      $(window).on('dialog:aftercreate', function (event, dialog, $element) {
        var id = $element.find('[data-layout-builder-target-highlight-id]').attr('data-layout-builder-target-highlight-id');
        if (id) {
          $('[data-layout-builder-highlight-id="' + id + '"]').addClass('layout-builder__block--selected');
        }
      });

      $(window).on('dialog:afterclose', function (event, dialog, $element) {
        $('.layout-builder__block--selected').removeClass('layout-builder__block--selected');
        if (Drupal.offCanvas.isOffCanvas($element)) {
          $('.layout-builder__actions--display').removeClass('layout-builder__actions--display');
        }
      });

      $('.layout-builder__region > .layout-builder-block').once().on('click', function (event) {
        var currentBlock = $(event.currentTarget);

        if (currentBlock.hasClass('layout-builder__block--selected')) {
          currentBlock.find('.layout-builder__actions__block').removeClass('layout-builder__actions--display');

          currentBlock.removeClass('layout-builder__block--selected');
        } else {
          $('.layout-builder__region > .layout-builder-block').removeClass('layout-builder__block--selected');
          $('.layout-builder__actions--display').removeClass('layout-builder__actions--display');

          currentBlock.find('.layout-builder__actions__block').addClass('layout-builder__actions--display');

          currentBlock.addClass('layout-builder__block--selected');
        }
      });
    }
  };

  Drupal.offCanvas.beforeCreate = function (_ref) {
    var settings = _ref.settings,
        $element = _ref.$element;

    Drupal.offCanvas.removeOffCanvasEvents($element);
    $('body').addClass('js-off-canvas-dialog-open');

    settings.position = {
      my: 'left top',
      at: Drupal.offCanvas.getEdge() + ' top',
      of: window
    };

    var setWidth = localStorage.getItem('Drupal.off-canvas.width');
    var position = settings.drupalOffCanvasPosition;
    var height = position === 'side' ? $(window).height() : settings.height;
    var width = position === 'side' ? setWidth || settings.width : '100%';
    settings.height = height;
    settings.width = width;
  };

  Drupal.offCanvas.beforeClose = function (_ref2) {
    var $element = _ref2.$element;

    $('body').removeClass('js-off-canvas-dialog-open');

    Drupal.offCanvas.removeOffCanvasEvents($element);
    Drupal.offCanvas.resetPadding();

    var container = Drupal.offCanvas.getContainer($element);
    var width = container.attr('data-offset-' + Drupal.offCanvas.getEdge());
    localStorage.setItem('Drupal.off-canvas.width', width);
  };
})(jQuery, Drupal);